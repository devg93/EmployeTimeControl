// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeInTimeOut.Module.Core.DAL;

#nullable disable

namespace TimeInTimeOut.Module.Core.DAL.Migrations
{
    [DbContext(typeof(DbInstaceTimeInOut))]
    partial class DbInstaceTimeInOutModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TimeInTimeOut.Module.Core.Domain.Entity.ComingAndgoing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("comingAndgoings");
                });

            modelBuilder.Entity("TimeInTimeOut.Module.Core.Domain.Entity.DateTimeTimeInTimeOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComingAndgoingId")
                        .HasColumnType("int");

                    b.Property<int?>("OnlineComingAndgoingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ComingAndgoingId");

                    b.HasIndex("OnlineComingAndgoingId");

                    b.ToTable("DateTimeTimeInTimeOuts");
                });

            modelBuilder.Entity("TimeInTimeOut.Module.Core.Domain.Entity.DateTimeTimeInTimeOut", b =>
                {
                    b.HasOne("TimeInTimeOut.Module.Core.Domain.Entity.ComingAndgoing", "OfflineComingAndgoing")
                        .WithMany("OfflineTime")
                        .HasForeignKey("ComingAndgoingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeInTimeOut.Module.Core.Domain.Entity.ComingAndgoing", "OnlineComingAndgoing")
                        .WithMany("OnlineTime")
                        .HasForeignKey("OnlineComingAndgoingId");

                    b.Navigation("OfflineComingAndgoing");

                    b.Navigation("OnlineComingAndgoing");
                });

            modelBuilder.Entity("TimeInTimeOut.Module.Core.Domain.Entity.ComingAndgoing", b =>
                {
                    b.Navigation("OfflineTime");

                    b.Navigation("OnlineTime");
                });
#pragma warning restore 612, 618
        }
    }
}
