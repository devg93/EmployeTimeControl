// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modules.Break.Module.Core.DLA;

#nullable disable

namespace Break.Module.Core.Migrations
{
    [DbContext(typeof(DbInstace))]
    partial class DbInstaceModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Modules.Break.Module.Core.Entity.BrakeTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("busyCheckerId")
                        .HasColumnType("int");

                    b.Property<int?>("busyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("busyCheckerId");

                    b.ToTable("BrakeTimes");
                });

            modelBuilder.Entity("Modules.Break.Module.Core.Entity.DateTimeWorkSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrakeTimeId")
                        .HasColumnType("int");

                    b.Property<int?>("BrakeTimeId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BrakeTimeId");

                    b.HasIndex("BrakeTimeId1");

                    b.ToTable("DateTimeWorkSchedules");
                });

            modelBuilder.Entity("Modules.Break.Module.Core.Entity.busyChecker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("busy")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("BusyCheckers");
                });

            modelBuilder.Entity("Modules.Break.Module.Core.Entity.BrakeTime", b =>
                {
                    b.HasOne("Modules.Break.Module.Core.Entity.busyChecker", "busyChecker")
                        .WithMany()
                        .HasForeignKey("busyCheckerId");

                    b.Navigation("busyChecker");
                });

            modelBuilder.Entity("Modules.Break.Module.Core.Entity.DateTimeWorkSchedule", b =>
                {
                    b.HasOne("Modules.Break.Module.Core.Entity.BrakeTime", null)
                        .WithMany("EndTime")
                        .HasForeignKey("BrakeTimeId");

                    b.HasOne("Modules.Break.Module.Core.Entity.BrakeTime", null)
                        .WithMany("StartTime")
                        .HasForeignKey("BrakeTimeId1");
                });

            modelBuilder.Entity("Modules.Break.Module.Core.Entity.BrakeTime", b =>
                {
                    b.Navigation("EndTime");

                    b.Navigation("StartTime");
                });
#pragma warning restore 612, 618
        }
    }
}
